x-airflow-common:
  &airflow-common
  build:
    context: ./airflow
    dockerfile: airflow.Dockerfile
  user: "0:0"  # run as root to access docker.sock
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__WEBSERVER__SECRET_KEY: "super-secret-key-please-change-me"  # use the same in all services!
    AIRFLOW__CORE__FERNET_KEY: "X5uLmpuVDfYEm1LXYGxR8UwHAPEVIXKo5A98O4yU8lY="  # optional but good to define
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW_CONN_POSTGRES_DEFAULT: postgresql://airflow:airflow@postgres:5432/airflow
    AIRFLOW_CONN_SSH_PYTHON_SERVICE: "ssh://airflow_user:airflow@python-service"
    

  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
  depends_on:
    postgres:
      condition: service_healthy

services:
  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "

  airflow-webserver:
    <<: *airflow-common
    ports:
      - 8081:8080
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
  
  postgres:
    image: postgres:13
    hostname: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    
  python-service:
    build:
      context: ./source_py  # points to where your Dockerfile is
      dockerfile: python.Dockerfile
    volumes:
      - ./source_py/src:/app  # optional if you want live code reload
    working_dir: /app # or any entrypoint script
  superset:
    build:
      context: ./visualization
      dockerfile: superset.Dockerfile
    environment:
      SUPERSET_SECRET_KEY: "iHPymayQbD8FCK/RWsbQMwKItR2JLcKMJxjrwK4hkXOhqdUv+f7ohrSG"
      DATABASE_URL: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    ports:
      - 8090:8088
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./visualization/superset_home:/app/superset_home
    command: >
      bash -c "
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088
      "
volumes:
  postgres-db-volume:


  


  
